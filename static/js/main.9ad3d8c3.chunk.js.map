{"version":3,"sources":["Utils/Banking.js","Utils/RealEstate.js","Utils/RealEstateSingle.js","Utils/RealEstateParent.js","Utils/Temperature.js","Layout/AppLayout.js","App.js","serviceWorker.js","index.js"],"names":["Banking","props","useStyles","makeStyles","theme","table","minWidth","formControl","margin","spacing","selectEmpty","marginTop","RealEstate","classes","useState","getInitialState","rows","setRows","lcl","JSON","parse","localStorage","getItem","_","isNil","key","area","sqfeet","sqyard","cent","acre","price","pricetype","totalprice","useEffect","setItem","stringify","handleChange","e","x","Number","target","id","name","value","String","replace","isNaN","length","trim","rows_new","forEach","row","setWith","Object","sqfeetValue","numberWithCommas","toLocaleString","fileReader","handleFileRead","finalData","result","substring","console","log","Grid","container","item","Button","color","onClick","concat","TableContainer","component","Paper","Table","className","aria-label","size","TableHead","TableRow","TableCell","TableBody","map","TextField","placeholder","onChange","FormControl","InputLabel","Select","labelId","keyId","handleChangePriceType","MenuItem","handleClear","jsonData","fileData","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","download","href","click","handleDownload","style","display","file","files","FileReader","onloadend","readAsText","removeItem","RealEstateSingle","commaremovedValue","marginLeft","label","InputLabelProps","shrink","RealEstateParent","to","root","flexGrow","Temperature","fr","setFR","cl","setCL","cr","toFixed","menuButton","marginRight","title","AppLayout","AppBar","position","Toolbar","IconButton","edge","path","process","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9ad3d8c3.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Banking=(props)=>{\n\n\n    return (<div>\n        Coming Soon...\n    </div> );\n}\n\nexport default  Banking;","\n\nimport React,{useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Grid } from '@material-ui/core';\nimport {  TextField } from \"@material-ui/core\";\nimport _ from 'lodash';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\n\n\nconst useStyles = makeStyles((theme) =>({\n    table: {\n      minWidth: 1500,\n      //marginTop:20,\n      //marginLeft:20\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }));\n  \n\nexport const RealEstate=(props)=>{\n    const classes = useStyles();\n   \n\n    const [rows, setRows] = useState(getInitialState()\n      ); \n \n  function createData(area, sqfeet, sqyard, cent, acre,price,pricetype) {\n    setRows(rows.concat([{ key:rows.length+1,area: area, sqfeet: 0, sqyard: sqyard, cent: cent, acre: acre,price:0,pricetype:'sqfeet',totalprice:0 }]));\n\n  }\n  \nuseEffect(()=>{\n\n  localStorage.setItem('realestatemulti',JSON.stringify(rows));\n\n},[rows])\n\n\nfunction getInitialState(){\n\n  let lcl=JSON.parse(localStorage.getItem('realestatemulti'));\n\n  if(_.isNil(lcl)){\n    return ([\n      {\n        key: 0,\n        area: \"Village\",\n        sqfeet: 1,\n        sqyard: 0,\n        cent: 0,\n        acre: 0,\n        price: 0,\n        pricetype:'sqfeet',\n        totalprice:0\n      },\n  ]);\n\n  }\n  else{\n    return lcl;\n  }\n}\n\n  /* \n  \n  1 acre= 100 cent\n  1 cent = 48.4 sqyd\n  1 sqyd= 9 sqft\n  \n  */\n  const handleChange = (e) => {\n\n    let key=Number(e.target.id);\n    let name=e.target.name;\n    let value=Number(removeCommas(e.target.value));\n    \n    if((isNaN(value) && name!=='area') || String(value).length!==String(value).trim().length){\n      return;\n    }\n\n\n    let rows_new=[...rows]\n    rows_new.forEach(row=>{\n      \n      if(row.key===key){\n        let sqfeet=row.sqfeet;\n        let sqyard=row.sqyard;\n        let cent=row.cent;\n        let acre=row.acre;\n        let price=row.price;\n        let pricetype=row.pricetype;\n\n        if(name==='area'){\n          _.setWith(row,`${name}`,e.target.value,Object);\n          \n        }\n        if(name==='price' ){\n          if(pricetype==='sqfeet'){\n\n          price=value;\n          let sqfeetValue=sqfeet*price;\n          //_.setWith(row,'sqfeet',sqfeetValue,Object)\n          _.setWith(row,'sqyard',9*sqfeetValue,Object)\n          _.setWith(row,'cent',48.4*9*sqfeetValue,Object)\n          _.setWith(row,'acre',100*48.4*9*sqfeetValue,Object)\n          _.setWith(row, \"totalprice\", sqfeetValue, Object);\n          _.setWith(row,`${name}`,value,Object)\n          \n          }\n          if(pricetype==='sqyard'){\n\n            price=value;\n            let sqfeetValue=(sqyard*price)/9;\n            _.setWith(row,'sqfeet',sqfeetValue,Object)\n            _.setWith(row,'cent',48.4*9*sqfeetValue,Object)\n            _.setWith(row,'acre',100*48.4*9*sqfeetValue,Object)\n            _.setWith(row, \"totalprice\", sqyard*price, Object);\n            _.setWith(row,`${name}`,value,Object)\n            \n            }\n            if(pricetype==='cent'){\n\n              price=value;\n              let sqfeetValue=(cent*price)/(9*48.4);\n              _.setWith(row,'sqfeet',sqfeetValue,Object)\n              _.setWith(row,'sqyard',9*sqfeetValue,Object)\n              //_.setWith(row,'cent',48.4*9*sqfeetValue,Object)\n              _.setWith(row,'acre',100*48.4*9*sqfeetValue,Object)\n              _.setWith(row, \"totalprice\", cent*price, Object);\n              _.setWith(row,`${name}`,value,Object)\n              \n              }\n              if(pricetype==='acre'){\n\n                price=value;\n                let sqfeetValue=(acre*price)/(9*48.4*100);\n                _.setWith(row,'sqfeet',sqfeetValue,Object)\n                _.setWith(row,'sqyard',9*sqfeetValue,Object)\n                _.setWith(row,'cent',48.4*9*sqfeetValue,Object)\n                //_.setWith(row,'acre',100*48.4*9*sqfeetValue,Object)\n                _.setWith(row, \"totalprice\", acre*price, Object);\n                _.setWith(row,`${name}`,value,Object)\n                \n                }\n        }\n\n        if(name==='sqyard' ){\n            let sqfeetValue=(value*price)/9;\n            _.setWith(row,'sqfeet',sqfeetValue,Object)\n            _.setWith(row,'cent',48.4*9*sqfeetValue,Object)\n            _.setWith(row,'acre',100*48.4*9*sqfeetValue,Object)\n            _.setWith(row, \"totalprice\", value*price, Object);\n            _.setWith(row,`${name}`,value,Object)\n        }\n        if(name==='sqfeet' ){\n          let sqfeetValue=value*price;\n            _.setWith(row,'sqyard',9*sqfeetValue,Object)\n            _.setWith(row,'cent',48.4*9*sqfeetValue,Object)\n            _.setWith(row,'acre',100*48.4*9*sqfeetValue,Object)\n            _.setWith(row, \"totalprice\", value*price, Object);\n            _.setWith(row,`${name}`,value,Object)\n      }\n      if(name==='cent'){\n        let sqfeetValue=(value*price)/(9*48.4);\n        _.setWith(row,'sqfeet',sqfeetValue,Object)\n        _.setWith(row,'sqyard',9*sqfeetValue,Object)\n        _.setWith(row,'acre',100*48.4*9*sqfeetValue,Object)\n        _.setWith(row, \"totalprice\", value*price, Object);\n        _.setWith(row,`${name}`,value,Object)\n        \n        }\n        if(name==='acre'){\n\n          let sqfeetValue=(value*price)/(9*48.4*100);\n          _.setWith(row,'sqfeet',sqfeetValue,Object)\n          _.setWith(row,'sqyard',9*sqfeetValue,Object)\n          _.setWith(row,'cent',48.4*9*sqfeetValue,Object)\n          _.setWith(row, \"totalprice\", value*price, Object);\n          _.setWith(row,`${name}`,value,Object)\n          \n          }\n\n\n        //_.setWith(row,`${name}`,value,Object)\n        \n      }\n      setRows(rows_new);\n\n    })\n    \n  }\n\n\n  function numberWithCommas(x) {\n    \n   return Number(String(x).replace(/[,]/g,'')).toLocaleString('en-IN');\n}\n\nfunction removeCommas(x) {\n    \n  return String(x).replace(/[,\\s]/g,'');\n}\n\n\nconst handleClick=(e)=>{\n  createData('new area','','','','','','')\n}\n\nconst handleClear=(keyId)=>{\n  let key=Number(keyId);\n  let rows_new=[...rows]\n  rows_new.forEach(row=>{\n    \n    if(row.key===key){\n      _.setWith(row,'area','',Object)\n      _.setWith(row,'sqfeet',1,Object)\n      _.setWith(row,'sqyard','',Object)\n      _.setWith(row,'cent','',Object)\n      _.setWith(row,'acre','',Object)\n      _.setWith(row,'price','',Object)\n      _.setWith(row,'pricetype','sqfeet',Object)\n      _.setWith(row,'totalprice',0,Object)\n      \n    }\n    setRows(rows_new);\n\n  })\n}\n\n\n\nconst handleChangePriceType = (e,keyId) => {\n\n  let key=Number(keyId);\n  let name='pricetype';\n  let value=(e.target.value);\n\n\n  let rows_new=[...rows]\n  rows_new.forEach(row=>{\n    \n    if(row.key===key){\n      _.setWith(row,'area','',Object)\n      _.setWith(row,'sqfeet',value==='sqfeet'?1:0,Object)\n      _.setWith(row,'sqyard',value==='sqyard'?1:0,Object)\n      _.setWith(row,'cent',value==='cent'?1:0,Object)\n      _.setWith(row,'acre',value==='acre'?1:0,Object)\n      _.setWith(row,'price','',Object)\n      _.setWith(row,`${name}`,value,Object)\n      _.setWith(row,'totalprice',0,Object)\n      \n    }\n    setRows(rows_new);\n\n  })\n  \n}\n\nconst handleDownload=(jsonData)=>{\n  const fileData = JSON.stringify(jsonData);\n  const blob = new Blob([fileData], {type: \"text/plain\"});\n  const url = URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.download = 'filename.json';\n  link.href = url;\n  link.click();\n}\nconst resetData=()=>{\n  localStorage.removeItem('realestatemulti');\n  setRows(getInitialState())\n}\n\nlet fileReader;\nconst handleFileRead=(e)=>{\n    const content=fileReader.result;\n    let finalData = content.replace(/\\\\/g, \"\");\n    finalData=String(finalData).substring(1)\n    finalData=String(finalData).substring(0,String(finalData).length-1)\n    console.log(finalData);\n    setRows(JSON.parse(finalData));\n    \n\n}\nconst handleChoosenFile=(file)=>{\n  fileReader=new FileReader();\n  fileReader.onloadend=handleFileRead;\n  fileReader.readAsText(file);\n\n}\n\n\n    return (\n      <>\n        <Grid container>\n          <Grid item>\n            <Button color=\"primary\" onClick={handleClick}>\n              Add new row\n            </Button>\n          </Grid>\n        </Grid>\n\n        <TableContainer component={Paper}>\n          <Table\n            className={classes.table}\n            aria-label=\"simple table\"\n            size={\"small\"}\n          >\n            <TableHead>\n              <TableRow>\n                <TableCell>Area</TableCell>\n                <TableCell>Price Type</TableCell>\n                <TableCell>Price</TableCell>\n                <TableCell>sq.Feet</TableCell>\n                <TableCell>sq.Yard / Gajam</TableCell>\n                <TableCell>Cent</TableCell>\n                <TableCell>Acre</TableCell>\n                <TableCell>Total Price</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.length > 0\n                ? rows.map((row) => (\n                    <TableRow key={row.key}>\n                      <TableCell>\n                        <TextField\n                          id={String(row.key)}\n                          name=\"area\"\n                          placeholder=\"enter area name\"\n                          value={row.area}\n                          onChange={handleChange}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <FormControl className={classes.formControl}>\n                          <InputLabel id=\"demo-simple-select-label\">\n                            Price Type\n                          </InputLabel>\n                          <Select\n                            labelId=\"demo-simple-select-label\"\n                            id={String(row.key)}\n                            value={row.pricetype}\n                            onChange={(e) =>\n                              handleChangePriceType(e, String(row.key))\n                            }\n                          >\n                            <MenuItem value={\"sqfeet\"}>sqfeet</MenuItem>\n                            <MenuItem value={\"sqyard\"}>sqyard</MenuItem>\n                            <MenuItem value={\"cent\"}>cent</MenuItem>\n                            <MenuItem value={\"acre\"}>acre</MenuItem>\n                          </Select>\n                        </FormControl>\n                      </TableCell>\n                      <TableCell>\n                        <TextField\n                          id={String(row.key)}\n                          name=\"price\"\n                          placeholder=\"enter price\"\n                          value={numberWithCommas(row.price)}\n                          onChange={handleChange}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <TextField\n                          id={String(row.key)}\n                          name=\"sqfeet\"\n                          placeholder=\"enter sqfeet\"\n                          value={numberWithCommas(row.sqfeet)}\n                          onChange={\n                            row.pricetype === \"sqfeet\" ? handleChange : null\n                          }\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <TextField\n                          id={String(row.key)}\n                          name=\"sqyard\"\n                          placeholder=\"enter sqyard\"\n                          value={numberWithCommas(row.sqyard)}\n                          onChange={\n                            row.pricetype === \"sqyard\" ? handleChange : null\n                          }\n                        />\n                      </TableCell>\n                      <TableCell>\n                        {\" \"}\n                        <TextField\n                          id={String(row.key)}\n                          name=\"cent\"\n                          placeholder=\"enter cent\"\n                          value={numberWithCommas(row.cent)}\n                          onChange={\n                            row.pricetype === \"cent\" ? handleChange : null\n                          }\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <TextField\n                          id={String(row.key)}\n                          name=\"acre\"\n                          placeholder=\"enter acre\"\n                          value={numberWithCommas(row.acre)}\n                          onChange={\n                            row.pricetype === \"acre\" ? handleChange : null\n                          }\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <TextField\n                          id={String(row.key)}\n                          name=\"totalprice\"\n                          placeholder=\"total price\"\n                          value={numberWithCommas(row.totalprice)}\n                          onChange={null}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <Button\n                          id={String(row.key)}\n                          name=\"clear\"\n                          color=\"primary\"\n                          onClick={() => handleClear(String(row.key))}\n                        >\n                          clear this row\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))\n                : null}\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        <Button\n          id={\"Dowload\"}\n          name=\"Dowload\"\n          color=\"primary\"\n          onClick={() => handleDownload(JSON.stringify(getInitialState()))}\n        >\n          Download data\n        </Button>\n\n        <Button color=\"primary\" /* variant=\"contained\" */ component=\"label\">\n          Upload File\n          <input\n          style={{ display: \"none\" }}\n            type=\"file\"\n            id=\"file\"\n            onChange={(e) => handleChoosenFile(e.target.files[0])}\n          ></input>\n        </Button>\n\n        <Button\n          id={\"reset\"}\n          name=\"reset\"\n          color=\"primary\"\n          onClick={() => resetData()}\n        >\n          Reset Page\n        </Button>\n\n\n      </>\n    );\n}\n\nexport default  RealEstate;","import React, { useState,useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { Grid } from \"@material-ui/core\";\nimport { TextField } from \"@material-ui/core\";\nimport _ from \"lodash\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 1500,\n    //marginTop:20,\n    //marginLeft:20\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport const RealEstateSingle = (props) => {\n  const classes = useStyles();\n\n  const [rows, setRows] = useState(\n    getInitialState()\n  );\n\n\n\nuseEffect(()=>{\n\n  localStorage.setItem('realestatesingle',JSON.stringify(rows));\n\n},[rows])\n\n\nfunction getInitialState(){\n\n  let lcl=JSON.parse(localStorage.getItem('realestatesingle'));\n\n  if(_.isNil(lcl)){\n    return ([\n      {\n        key: 0,\n        area: \"Village\",\n        sqfeet: 1,\n        sqyard: 0,\n        cent: 0,\n        acre: 0,\n        price: 0,\n        pricetype: \"sqfeet\",\n        totalprice:0\n      },\n  ]);\n\n  }\n  else{\n    return lcl;\n  }\n}\n\n\n  /* \n  \n  1 acre= 100 cent\n  1 cent = 48.4 sqyd\n  1 sqyd= 9 sqft\n  \n  */\n  const handleChange = (e) => {\n    let key = Number(e.target.id);\n    let name = e.target.name;\n    let commaremovedValue=removeCommas(e.target.value);\n    let value = Number(commaremovedValue);\n\n      if (isNaN(value)) {\n      return;\n    }\n\n    let rows_new = [...rows];\n    rows_new.forEach((row) => {\n      if (row.key === key) {\n        let sqfeet = row.sqfeet;\n        let sqyard = row.sqyard;\n        let cent = row.cent;\n        let acre = row.acre;\n        let price = row.price;\n        let pricetype = row.pricetype;\n\n        if (name === \"price\") {\n          if (pricetype === \"sqfeet\") {\n            price = value;\n            let sqfeetValue = sqfeet * price;\n            //_.setWith(row,'sqfeet',sqfeetValue,Object)\n            _.setWith(row, \"sqyard\", 9 * sqfeetValue, Object);\n            _.setWith(row, \"cent\", 48.4 * 9 * sqfeetValue, Object);\n            _.setWith(row, \"acre\", 100 * 48.4 * 9 * sqfeetValue, Object);\n            _.setWith(row, \"totalprice\", sqfeetValue, Object);\n            _.setWith(row, `${name}`, value, Object);\n          }\n          if (pricetype === \"sqyard\") {\n            price = value;\n            let sqfeetValue = (sqyard * price) / 9;\n            _.setWith(row, \"sqfeet\", sqfeetValue, Object);\n            _.setWith(row, \"cent\", 48.4 * 9 * sqfeetValue, Object);\n            _.setWith(row, \"acre\", 100 * 48.4 * 9 * sqfeetValue, Object);\n            _.setWith(row, \"totalprice\", sqyard*price, Object);\n            _.setWith(row, `${name}`, value, Object);\n          }\n          if (pricetype === \"cent\") {\n            price = value;\n            let sqfeetValue = (cent * price) / (9 * 48.4);\n            _.setWith(row, \"sqfeet\", sqfeetValue, Object);\n            _.setWith(row, \"sqyard\", 9 * sqfeetValue, Object);\n            //_.setWith(row,'cent',48.4*9*sqfeetValue,Object)\n            _.setWith(row, \"acre\", 100 * 48.4 * 9 * sqfeetValue, Object);\n            _.setWith(row, \"totalprice\", cent*price, Object);\n            _.setWith(row, `${name}`, value, Object);\n            \n          }\n          if (pricetype === \"acre\") {\n            price = value;\n            let sqfeetValue = (acre * price) / (9 * 48.4 * 100);\n            _.setWith(row, \"sqfeet\", sqfeetValue, Object);\n            _.setWith(row, \"sqyard\", 9 * sqfeetValue, Object);\n            _.setWith(row, \"cent\", 48.4 * 9 * sqfeetValue, Object);\n            //_.setWith(row,'acre',100*48.4*9*sqfeetValue,Object)\n            _.setWith(row, \"totalprice\", acre*price, Object);\n            _.setWith(row, `${name}`, value, Object);\n          }\n        }\n\n        if (name === \"sqyard\") {\n          let sqfeetValue = (value * price) / 9;\n          _.setWith(row, \"sqfeet\", sqfeetValue, Object);\n          _.setWith(row, \"cent\", 48.4 * 9 * sqfeetValue, Object);\n          _.setWith(row, \"acre\", 100 * 48.4 * 9 * sqfeetValue, Object);\n          _.setWith(row, \"totalprice\", value*price, Object);\n          _.setWith(row, `${name}`, value, Object);\n        }\n        if (name === \"sqfeet\") {\n          let sqfeetValue = value * price;\n          _.setWith(row, \"sqyard\", 9 * sqfeetValue, Object);\n          _.setWith(row, \"cent\", 48.4 * 9 * sqfeetValue, Object);\n          _.setWith(row, \"acre\", 100 * 48.4 * 9 * sqfeetValue, Object);\n          _.setWith(row, \"totalprice\", value*price, Object);\n          _.setWith(row, `${name}`, value, Object);\n        }\n        if (name === \"cent\") {\n          let sqfeetValue = (value * price) / (9 * 48.4);\n          _.setWith(row, \"sqfeet\", sqfeetValue, Object);\n          _.setWith(row, \"sqyard\", 9 * sqfeetValue, Object);\n          _.setWith(row, \"acre\", 100 * 48.4 * 9 * sqfeetValue, Object);\n          _.setWith(row, \"totalprice\", value*price, Object);\n          _.setWith(row, `${name}`, value, Object);\n        }\n        if (name === \"acre\") {\n          let sqfeetValue = (value * price) / (9 * 48.4 * 100);\n          _.setWith(row, \"sqfeet\", sqfeetValue, Object);\n          _.setWith(row, \"sqyard\", 9 * sqfeetValue, Object);\n          _.setWith(row, \"cent\", 48.4 * 9 * sqfeetValue, Object);\n          _.setWith(row, \"totalprice\", value*price, Object);\n          _.setWith(row, `${name}`, value, Object);\n        }\n\n        //_.setWith(row,`${name}`,value,Object)\n      }\n      setRows(rows_new);\n    });\n  };\n\n  function numberWithCommas(x) {\n    return Number(String(x).replace(/[,]/g, \"\")).toLocaleString(\"en-IN\");\n  }\n\n  function removeCommas(x) {\n    return String(x).replace(/[,\\s]/g, \"\");\n  }\nconst handleDownload=(jsonData)=>{\n  const fileData = JSON.stringify(jsonData);\n  const blob = new Blob([fileData], {type: \"text/plain\"});\n  const url = URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.download = 'filename.json';\n  link.href = url;\n  link.click();\n}\n\nconst resetData=()=>{\n  localStorage.removeItem('realestatesingle');\n  setRows(getInitialState())\n}\n\n\n  const handleClear = (keyId) => {\n    let key = Number(keyId);\n    let rows_new = [...rows];\n\n    rows_new.forEach((row) => {\n      if (row.key === key) {\n        _.setWith(row, \"area\", \"\", Object);\n        _.setWith(row, \"sqfeet\", 1, Object);\n        _.setWith(row, \"sqyard\", \"\", Object);\n        _.setWith(row, \"cent\", \"\", Object);\n        _.setWith(row, \"acre\", \"\", Object);\n        _.setWith(row, \"price\", \"\", Object);\n        _.setWith(row, \"pricetype\", \"sqfeet\", Object);\n        _.setWith(row,'totalprice',0,Object)\n      }\n      setRows(rows_new);\n    });\n  };\n\n  const handleChangePriceType = (e, keyId) => {\n    let key = Number(keyId);\n    let name = \"pricetype\";\n    let value = e.target.value;\n\n    let rows_new = [...rows];\n    rows_new.forEach((row) => {\n      if (row.key === key) {\n        _.setWith(row, \"area\", \"\", Object);\n        _.setWith(row, \"sqfeet\", value === \"sqfeet\" ? 1 : 0, Object);\n        _.setWith(row, \"sqyard\", value === \"sqyard\" ? 1 : 0, Object);\n        _.setWith(row, \"cent\", value === \"cent\" ? 1 : 0, Object);\n        _.setWith(row, \"acre\", value === \"acre\" ? 1 : 0, Object);\n        _.setWith(row, \"price\", \"\", Object);\n        _.setWith(row, `${name}`, value, Object);\n        _.setWith(row,'totalprice',0,Object)\n      }\n      setRows(rows_new);\n    });\n  };\n\n  let fileReader;\n  const handleFileRead=(e)=>{\n      const content=fileReader.result;\n      let finalData = content.replace(/\\\\/g, \"\");\n      finalData=String(finalData).substring(1)\n      finalData=String(finalData).substring(0,String(finalData).length-1)\n      console.log(finalData);\n      setRows(JSON.parse(finalData));\n      \n\n  }\n  const handleChoosenFile=(file)=>{\n    fileReader=new FileReader();\n    fileReader.onloadend=handleFileRead;\n    fileReader.readAsText(file);\n\n  }\n\n  return (\n    <Grid container spacing={5}>\n      <Grid item style={{ marginLeft: 40, marginTop: 40 }}>\n        <FormControl className={classes.formControl}>\n          <InputLabel id=\"demo-simple-select-label\">Price Type</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id={String(rows[0].key)}\n            value={rows[0].pricetype}\n            onChange={(e) => handleChangePriceType(e, String(rows[0].key))}\n          >\n            <MenuItem value={\"sqfeet\"}>sqfeet</MenuItem>\n            <MenuItem value={\"sqyard\"}>sqyard</MenuItem>\n            <MenuItem value={\"cent\"}>cent</MenuItem>\n            <MenuItem value={\"acre\"}>acre</MenuItem>\n          </Select>\n        </FormControl>\n\n        <TextField\n          id={String(rows[0].key)}\n          name=\"price\"\n          label=\"price\"\n          placeholder=\"enter price\"\n          value={numberWithCommas(rows[0].price)}\n          onChange={handleChange}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n\n        <TextField\n          id={String(rows[0].key)}\n          name=\"sqfeet\"\n          label=\"sqfeet\"\n          placeholder=\"enter sqfeet\"\n          value={numberWithCommas(rows[0].sqfeet)}\n          onChange={rows[0].pricetype === \"sqfeet\" ? handleChange : null}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <TextField\n          id={String(rows[0].key)}\n          name=\"sqyard\"\n          label=\"sqyard\"\n          placeholder=\"enter sqyard\"\n          value={numberWithCommas(rows[0].sqyard)}\n          onChange={rows[0].pricetype === \"sqyard\" ? handleChange : null}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n\n        <TextField\n          id={String(rows[0].key)}\n          name=\"cent\"\n          label=\"cent\"\n          placeholder=\"enter cent\"\n          value={numberWithCommas(rows[0].cent)}\n          onChange={rows[0].pricetype === \"cent\" ? handleChange : null}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <TextField\n          id={String(rows[0].key)}\n          name=\"acre\"\n          label=\"acre\"\n          placeholder=\"enter acre\"\n          value={numberWithCommas(rows[0].acre)}\n          onChange={rows[0].pricetype === \"acre\" ? handleChange : null}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <TextField\n          id={String(rows[0].key)}\n          name=\"totalprice\"\n          label=\"total price\"\n          placeholder=\"totalprice\"\n          value={numberWithCommas(rows[0].totalprice)}\n          onChange={null}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <Button\n          id={String(rows[0].key)}\n          name=\"clear\"\n          color=\"primary\"\n          onClick={() => handleClear(String(rows[0].key))}\n        >\n          Clear\n        </Button>\n        <Button\n          id={String(rows[0].key)}\n          name=\"Dowload\"\n          color=\"primary\"\n          onClick={() => handleDownload(JSON.stringify(getInitialState()))}\n        >\n          Download data\n        </Button>\n\n        <Button color=\"primary\" /* variant=\"contained\" */ component=\"label\">\n          Upload File\n          <input\n            style={{ display: \"none\" }}\n            type=\"file\"\n            id=\"file\"\n            onChange={(e) => handleChoosenFile(e.target.files[0])}\n          ></input>\n        </Button>\n\n        <Button\n          id={\"reset\"}\n          name=\"reset\"\n          color=\"primary\"\n          onClick={() => resetData()}\n        >\n          Reset Page\n        </Button>\n        \n      </Grid>\n    </Grid>\n  );\n};\n\nexport default RealEstateSingle;\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport {\n    \n    Link\n  } from \"react-router-dom\";\n\nexport const RealEstateParent=(props)=>{\n\n\n    return (\n        <>\n        <Grid container>\n          <Grid item style={{marginLeft:40,marginTop:40}}>\n          <Link to=\"/realEstate\" >Navigate to Tabular format</Link>\n        </Grid>\n        </Grid>\n        <Grid container>\n          <Grid item style={{marginLeft:40,marginTop:40}}>\n          <Link to=\"/realEstateSingle\"  >Navigate to Single item format</Link>\n        </Grid>\n        </Grid>\n        \n        \n        \n        </>\n\n\n    );\n}\n\nexport default  RealEstateParent;","import React, { useState } from \"react\";\nimport {  TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  \n}));\n\nexport const Temperature = (props) => {\n  const classes = useStyles();\n\n  const [fr, setFR] = useState();\n  const [cl, setCL] = useState();\n\n  const handleChange = (e) => {\n    if(isNaN(e.target.value) || String(e.target.value).length!==String(e.target.value).trim().length){\n      return;\n    }\n    if (e.target.value === \"\") {\n      setFR(\"\");\n      setCL(\"\");\n      return;\n    }\n    if (e.target.name === \"fr\") {\n      setFR(e.target.value);\n      let cr = ((5 / 9) * (Number(e.target.value) - 32)).toFixed(2);\n      setCL(cr);\n    }\n    if (e.target.name === \"cl\") {\n      setCL(e.target.value);\n      let fr = ((9 / 5) * Number(e.target.value) + 32).toFixed(2);\n      setFR(fr);\n    }\n  };\n\n  return (\n    <>\n      <div className={classes.root}>\n        <Grid container spacing={5}>\n          <Grid item  ></Grid>\n          <Grid item  ></Grid>\n        </Grid>\n        <Grid container spacing={5} >\n          <Grid item ></Grid>\n          <Grid item >\n            <TextField\n              id=\"cl\"\n              name=\"cl\"\n              label=\"celcius\"\n              placeholder=\"enter in celcius\"\n              value={cl}\n              onChange={handleChange}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item ></Grid>\n          <Grid item  style={{marginLeft:40}}>\n            <TextField\n              id=\"fr\"\n              name=\"fr\"\n              label=\"fahrenheit\"\n              placeholder=\"enter in fahrenheit\"\n              value={fr}\n              onChange={handleChange}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n        </Grid>\n      </div>\n\n      <div>\n        <div></div>\n      </div>\n    </>\n  );\n};\n\nexport default Temperature;\n","import React from \"react\";\n\nimport {\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Banking from '../Utils/Banking';\nimport RealEstate from '../Utils/RealEstate';\nimport RealEstateSingle from '../Utils/RealEstateSingle';\nimport RealEstateParent from '../Utils/RealEstateParent';\n\nimport Temperature from '../Utils/Temperature';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  \n}));\n\n\nexport const AppLayout = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n\n<div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Button color=\"inherit\"><Link to=\"/banking\" style={{color:'white'}}>Banking</Link></Button>\n          <Button color=\"inherit\"> <Link to=\"/realEstateParent\" style={{color:'white'}}>RealEstate</Link></Button>\n          <Button color=\"inherit\"> <Link to=\"/temperature\" style={{color:'white'}}>Temperature</Link></Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n    \n\n    <Switch>\n                  <Route path=\"/banking\">\n                    <Banking />\n                  </Route>\n                  <Route path=\"/realEstateParent\">\n                    <RealEstateParent />\n                  </Route>\n\n                  <Route path=\"/realEstate\">\n                    <RealEstate />\n                  </Route>\n\n                  <Route path=\"/realEstateSingle\">\n                    <RealEstateSingle />\n                  </Route>\n\n                  <Route path={process.env.PUBLIC_URL + '/temperature'}>\n                    <Temperature />\n                  </Route>\n                  <Route path=\"/\">\n                  <Temperature />\n                  </Route>\n                </Switch>\n                </>\n  );\n};\n\n\n\n\nexport default AppLayout;","import React from 'react';\nimport AppLayout from './Layout/AppLayout';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n      <Router >\n        \n  \n\n    <AppLayout>\n  \n    </AppLayout>\n    \n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}